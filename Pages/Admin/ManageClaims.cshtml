@page
@model LostAndFoundWebApp.Pages.Admin.ManageClaimsModel
@{
	ViewData["Title"] = "认领申请管理";
}
<style>
/* 主容器优化 */
.laf_container {
	padding: 2rem;
	max-width: 1200px;
	margin: 0 auto;
}
/* 表格深度美化 */
.table {
	width: 100%;
	border-collapse: collapse;
	margin: 1.5rem 0;
	background: white;
	box-shadow: 0 1px 3px rgba(0,0,0,0.1);
	border-radius: 8px;
	overflow: hidden;
}

.table th {
	background: #2c3e50;
	color: white;
	padding: 1rem;
	font-weight: 600;
	text-align: left;
}

.table td {
	padding: 1rem;
	border-bottom: 1px solid #ecf0f1;
	color: #34495e;
}

/* 斑马纹效果 */
.table tbody tr:nth-child(even) {
	background-color: #f8f9fa;
}

h1 {
	color: #2c3e50;
	margin-bottom: 1.5rem;
	padding-bottom: 0.5rem;
	border-bottom: 2px solid #3498db;
	display: inline-block;
}
</style>
<div class="laf_container">
<h1>认领申请管理</h1>
<form method="post">
	@Html.AntiForgeryToken()
</form>
<table class="table">
	<thead>
		<tr>
			<th>申请ID</th>
			<th>物品ID</th>
			<th>用户ID</th>
			<th>描述</th>
			<th>证明材料</th>
			<th>状态</th>
			<th>操作</th>
		</tr>
	</thead>
	<tbody id="claimTableBody">
		@foreach (var claim in Model.Claims)
		{
			<tr id="claimRow-@claim.ClaimId">
				<td>@claim.ClaimId</td>
				<td>@claim.ItemId</td>
				<td>@claim.UserId</td>
				<td>@claim.ClaimDescription</td>
				<td>
					@if (!string.IsNullOrEmpty(claim.ProofDocPath))
					{
						<a href="@Url.Content($"~/uploads/claims/{System.IO.Path.GetFileName(claim.ProofDocPath)}")" target="_blank">
							@System.IO.Path.GetFileName(claim.ProofDocPath)
						</a>
					}
					else
					{
						<span>无</span>
					}
				</td>
				<td id="claimStatus-@claim.ClaimId">
					@if (claim.Status == LostAndFoundWebApp.Models.ClaimMetadata.Status.Approved)
					{
						@("已通过")
					}
					else if (claim.Status == LostAndFoundWebApp.Models.ClaimMetadata.Status.Rejected)
					{
						@("已拒绝")
					}
					else
					{
						@("待处理")
					}
				</td>
				<td>
					@if (claim.Status == LostAndFoundWebApp.Models.ClaimMetadata.Status.Pending)
					{
						<button class="btn btn-sm btn-success toggle-status-btn" data-claim-id="@claim.ClaimId" data-next-status="Approved">通过</button>
						<button class="btn btn-sm btn-danger toggle-status-btn" data-claim-id="@claim.ClaimId" data-next-status="Rejected">拒绝</button>
					}
					else
					{
						<button class="btn btn-sm btn-secondary" disabled>已处理</button>
					}
				</td>
			</tr>
		}
	</tbody>
</table>
</div>
@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const buttons = document.querySelectorAll('.toggle-status-btn');
			buttons.forEach(button => {
				button.addEventListener('click', async (e) => {
					e.preventDefault();
					const claimId = e.target.getAttribute('data-claim-id');
					const nextStatus = e.target.getAttribute('data-next-status');
					const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');

					if (!tokenElement) {
						console.error('防伪令牌未找到，请确保页面包含 @Html.AntiForgeryToken()。');
						alert('请求失败：防伪令牌未找到。');
						return;
					}

					const token = tokenElement.value;

					try {
						const response = await fetch(`/Admin/ManageClaims?handler=Toggle`, {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								'RequestVerificationToken': token
							},
							body: JSON.stringify({ claimId: parseInt(claimId), nextStatus: nextStatus })
						});

						if (response.ok) {
							const result = await response.json();
							const statusCell = e.target.closest('tr').querySelector('td:nth-child(6)');
							const actionCell = e.target.closest('td');

							// 更新状态
							if (result.status === 'Approved') {
								statusCell.textContent = '已通过';
							} else if (result.status === 'Rejected') {
								statusCell.textContent = '已拒绝';
							} else {
								statusCell.textContent = '待处理';
							}

							// 替换操作按钮为“已处理”
							actionCell.innerHTML = '<button class="btn btn-sm btn-secondary" disabled>已处理</button>';
						} else {
							alert('更新失败，请稍后重试。');
						}
					} catch (error) {
						console.error('请求失败:', error);
						alert('请求失败，请检查网络连接。');
					}
				});
			});
		});
	</script>
}